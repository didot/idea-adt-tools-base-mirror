<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright (C) 2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<!--
    Extension to repo-common for the primary repository, containing the repository root element and
    the typedetails subclasses for:
    platform
    source
    tool
    platform-tool
    build-tool
    doc
    and associated classes.

    JAXB-usable classes can be generated from this schema as follows:
    java com.sun.tools.internal.xjc.Driver \
         -catalog <tools/base path>/repository/src/main/java/com/android/repository/api/catalog.xml \
         -b <tools/base path>/repository/src/main/java/com/android/repository/api/common.xjb \
         -b com/android/sdklib/repositoryv2/sdk-common.xjb \
         -p com.android.sdklib.repositoryv2.generated.repository.v1 \
         com/android/sdklib/repositoryv2/sdk-repository-01.xsd \
         -extension -Xandroid-inheritance \
         -b repository/src/main/java/com/android/repository/api/global.xjb -no-header

    with tools.jar, jaxb-inheritance-plugin.jar, and the repository classes on the classpath.
    Note that you can not use the xjc executable, as it does not support 3rd-party plugins.
-->
<xsd:schema
        targetNamespace="http://schemas.android.com/sdk/android/repo/repository2/01"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        xmlns:sdk="http://schemas.android.com/sdk/android/repo/repository2/01"
        xmlns:common="http://schemas.android.com/repository/android/common/01"
        xmlns:sdk-common="http://schemas.android.com/sdk/android/repo/common/01"
        elementFormDefault="unqualified"
        attributeFormDefault="unqualified"
        xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
        xmlns:plugin="http://schemas.android.com/android/jaxb/plugin/1"
        jaxb:extensionBindingPrefixes="plugin"
        version="1"
        jaxb:version="2.0">

    <xsd:import namespace="http://schemas.android.com/repository/android/common/01"/>
    <xsd:import namespace="http://schemas.android.com/sdk/android/repo/common/01" schemaLocation="sdk-common-01.xsd"/>

    <!-- the root element for primary repositories -->
    <xsd:element name="sdk-repository" type="common:repositoryType"/>

    <xsd:annotation>
        <xsd:documentation>
            Customization specifying the superclass of ObjectFactory.
        </xsd:documentation>
        <xsd:appinfo>
            <plugin:super name="com.android.sdklib.repositoryv2.meta.RepoFactory"/>
        </xsd:appinfo>
    </xsd:annotation>

    <xsd:complexType name="platformDetailsType">
        <xsd:annotation>
            <xsd:documentation>
                type-details subclass for platform components, including information on the
                layoutlib provided.
            </xsd:documentation>
            <xsd:appinfo>
                <plugin:super name="com.android.sdklib.repositoryv2.meta.DetailsTypes$PlatformDetailsType"/>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="sdk-common:apiDetailsType">
                <xsd:sequence>
                    <!-- The layoutlib version provided by this platform. -->
                    <xsd:element name="layoutlib" type="sdk:layoutlibType"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="layoutlibType">
        <xsd:annotation>
            <xsd:documentation>
                The API level used by the LayoutLib included in a platform to communicate with the IDE.
            </xsd:documentation>
            <xsd:appinfo>
                <plugin:super name="com.android.sdklib.repositoryv2.meta.DetailsTypes$PlatformDetailsType$LayoutlibType"/>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:attribute name="api" type="xsd:int" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="sourceDetailsType">
        <xsd:annotation>
            <xsd:documentation>
                trivial type-details subclass for source components.
            </xsd:documentation>
            <xsd:appinfo>
                <plugin:super name="com.android.sdklib.repositoryv2.meta.DetailsTypes$SourceDetailsType"/>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="sdk-common:apiDetailsType"/>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:complexType name="_xjcWorkaround">
        <xsd:annotation>
            <xsd:documentation>
                Due to a bug/limitation in xjc, if you import a schema you must reference all
                imported types that include plugin customizations, or it is impossible to
                acknowledge that the customizations are processed.
                This type will be removed from classes generated from this schema by InheritancePlugin.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:all>
            <xsd:element name="dummy-license" type="common:licenseType"/>
            <xsd:element name="dummy-revision" type="common:revisionType"/>
            <xsd:element name="dummy-archive" type="common:archiveType"/>
            <xsd:element name="dummy-dependency" type="common:dependencyType"/>
            <xsd:element name="dummy-remote" type="common:remotePackage"/>
            <xsd:element name="dummy-local" type="common:localPackage"/>
            <xsd:element name="dummy-os" type="common:osType"/>
            <xsd:element name="dummy-licenses" type="common:licensesType"/>
            <xsd:element name="dummy-dependencies" type="common:dependenciesType"/>
            <xsd:element name="dummy-archives" type="common:archivesType"/>
            <xsd:element name="dummy-type" type="common:typeDetails"/>
            <xsd:element name="dummy-repository" type="common:repositoryType"/>
            <xsd:element name="dummy-complete" type="common:completeType"/>
            <xsd:element name="dummy-patch" type="common:patchType"/>
            <xsd:element name="dummy-patches" type="common:patchesType"/>
            <xsd:element name="dummy-api" type="sdk-common:apiDetailsType"/>
            <xsd:element name="dummy-iddisp" type="sdk-common:idDisplayType"/>
            <xsd:element name="dummy-library" type="sdk-common:libraryType"/>
        </xsd:all>
    </xsd:complexType>
</xsd:schema>
